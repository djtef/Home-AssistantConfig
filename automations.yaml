- id: '1667855934726'
  alias: 'Fermer volets coucher soleil '
  description: 'Ferme les volets roulants après le coucher du soleil '
  trigger:
  - platform: sun
    event: sunset
    id: pile
  - platform: sun
    event: sunset
    offset: 00:15:00
    id: plus15min
  - platform: sun
    event: sunset
    offset: 00:45:00
    id: plus45min
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: pile
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.porte_fenetre_salon_verrouillee
          state: 'on'
        then:
        - service: cover.close_cover
          target:
            entity_id: cover.vr_porte_fenetre_salon
    - conditions:
      - condition: trigger
        id: plus15min
      sequence:
      - service: cover.close_cover
        target:
          entity_id:
          - cover.vr_bureau
          - cover.vr_cellier
          - cover.vr_chambre_1
          - cover.vr_chambre_2
          - cover.vr_chambre_3
          - cover.vr_escalier
          - cover.vr_palier
          - cover.vr_salle_de_jeu
    - conditions:
      - condition: trigger
        id: plus45min
      sequence:
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.baie_cuisine_verrouillee_droite
            state: 'on'
          - condition: state
            entity_id: binary_sensor.baie_cuisine_verrouillee_gauche
            state: 'on'
        then:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.vr_cuisine
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.baie_salon_verrouillee_droite
            state: 'on'
          - condition: state
            entity_id: binary_sensor.baie_salon_verrouillee_gauche
            state: 'on'
        then:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.vr_salon
  mode: single
- id: '1667940962264'
  alias: Zone Notification
  description: ''
  use_blueprint:
    path: homeassistant/notify_leaving_zone.yaml
    input:
      person_entity: person.thomas
      zone_entity: zone.maison
      notify_device: 6b2bbffd51050ec702281f101ce90bec
- id: '1669586212407'
  alias: Éclairage placard escalier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_sensor_magnet_aq2_opening
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.escalier_placard_2
  mode: single
- id: '1669586289331'
  alias: Extinction éclairage placard escalier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_sensor_magnet_aq2_opening
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.escalier_placard_2
  mode: single
- id: '1669586500452'
  alias: Éclairage cellier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_sensor_magnet_aq2_opening_2
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: cover.vr_cellier
    state: closed
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.cellier_spots
  mode: single
- id: '1669586965200'
  alias: Éclairage entrée cuisine
  description: ''
  trigger:
  - device_id: 94f10a3d79b25b9d82a903e70bd953ab
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: remote_button_short_press
  condition: []
  action:
  - if:
    - condition: state
      entity_id: light.cuisine_spots_plan_de_travail
      state: 'on'
    then:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.cuisine_spots_plan_de_travail
    else:
    - service: light.turn_on
      data: {}
      target:
        entity_id: light.cuisine_spots_plan_de_travail
  mode: single
- id: '1672266440012'
  alias: Lampe bureau
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bp_bureau
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0.5
  condition: []
  action:
  - service: light.toggle
    data: {}
    target:
      entity_id: light.yeelight_color_0x458bc59
  mode: single
- id: '1673644248347'
  alias: Cube
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cube_158d0001038dce
    attribute: last_action
    to: rotate
  condition: []
  action:
  - service: light.turn_on
    data:
      rgb_color:
      - 255
      - 60
      - 0
    target:
      entity_id: light.gateway_light_34ce008bede9
  mode: single
- id: '1673734933477'
  alias: Cube 2
  description: ''
  trigger:
  - device_id: 2c446dcafdb0df7cc430ad8f01349807
    domain: zha
    platform: device
    type: device_flipped
    subtype: face_1
  condition: []
  action:
  - service: notify.moi
    data:
      message: Cube face 1
  mode: single
- id: '1673905915371'
  alias: Cycle lave-vaiselle
  description: Détecte le début et la fin du lave-vaiselle
  use_blueprint:
    path: sbyx/notify-or-do-something-when-an-appliance-like-a-dishwasher-or-washing-machine-finishes.yaml
    input:
      power_sensor: sensor.prise_lave_vaisselle_active_power
      starting_threshold: 3
      starting_hysteresis: 1
      finishing_threshold: 1900
      finishing_hysteresis: 60
      actions:
      - service: notify.maison
        data:
          message: Le lave vaisselle a terminé.
      - service: light.toggle
        data: {}
        target:
          entity_id: light.salon_eclairage_central
      - wait_for_trigger:
        - platform: numeric_state
          entity_id: sensor.consommation_lave_vaiselle
          for:
            hours: 0
            minutes: 1
            seconds: 0
          above: 1500
      - service: notify.maison
        data:
          message: 'Lave-vaisselle : fin prélavage. Début lavage'
      - wait_for_trigger:
        - platform: numeric_state
          entity_id: sensor.consommation_lave_vaiselle
          for:
            hours: 0
            minutes: 1
            seconds: 0
          below: 1500
      - service: notify.maison
        data:
          message: 'Lave vaisselle : fin lavage. Début rinçage. '
      - wait_for_trigger:
        - platform: numeric_state
          entity_id: sensor.consommation_lave_vaiselle
          for:
            hours: 0
            minutes: 1
            seconds: 0
          above: 1500
      - service: notify.maison
        data:
          message: 'Lave vaisselle : fin rinçage. Début séchage '
      pre_actions:
      - service: notify.maison
        data:
          message: Démarrage du lave-vaiselle.
      - service: light.toggle
        data: {}
        target:
          entity_id:
          - light.salon_eclairage_central
- id: '1674426498201'
  alias: Lave-vaisselle
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.prise_lave_vaisselle_active_power
    for:
      hours: 0
      minutes: 0
      seconds: 30
    above: 8
  condition: []
  action:
  - service: notify.moi
    data:
      message: 'Lave-vaisselle : Démarrage prélavage'
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.prise_lave_vaisselle_active_power
      for:
        hours: 0
        minutes: 0
        seconds: 30
      above: 1500
  - service: notify.moi
    data:
      message: 'Lave-vaiselle : début lavage'
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.prise_lave_vaisselle_active_power
      for:
        hours: 0
        minutes: 0
        seconds: 30
      below: 1500
  - service: notify.moi
    data:
      message: 'Lave-vaiselle : début de rinçage'
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.prise_lave_vaisselle_active_power
      for:
        hours: 0
        minutes: 0
        seconds: 30
      above: 1500
    continue_on_timeout: true
  - service: notify.moi
    data:
      message: 'Lave-vaisselle : début de séchage'
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.prise_lave_vaisselle_active_power
      for:
        hours: 1
        minutes: 0
        seconds: 30
      below: 1500
  - service: notify.moi
    data:
      message: 'Lave-vaisselle : Fin de cycle'
  mode: single
- id: '1675635231758'
  alias: Détection sirène
  description: Avertit si la sirène intérieure est déclenchée
  trigger:
  - platform: state
    entity_id:
    - switch.sirene_interieure
    to: 'on'
  condition: []
  action:
  - service: notify.maison
    data:
      message: 'Déclenchement sirène intérieure ! '
  - service: notify.mobile_app_galaxy_s20_fe
    data:
      message: 'Déclenchement sirène intérieure ! '
  - service: notify.moi
    data:
      message: 'Déclenchement sirène intérieure ! '
  mode: single
- id: '1675635547927'
  alias: Extinction sirène intérieure
  description: Éteint la sirène intérieure au bout de 3min
  trigger:
  - platform: state
    entity_id:
    - switch.sirene_interieure
    to: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.sirene_interieure
  mode: single
- id: '1676238242545'
  alias: Extinction lumière placard escalier
  description: Extinction lumière placard escalier au bout d'1 min
  trigger:
  - platform: state
    entity_id:
    - light.escalier_placard_2
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.escalier_placard_2
  mode: single
- id: '1677092658855'
  alias: Alarme
  description: Gère les état de l'alarme
  trigger:
  - platform: state
    entity_id:
    - alarm_control_panel.alarme_maison
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_maison
        state: arming
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.alarme_silencieuse
          state: 'off'
        then:
        - service: script.tts_ouvertures
          data:
            volume: 80
        - service: script.tts_google_home
          data:
            texte: L'alarme sera activée dès que la porte sera fermée
            volume: 80
            media_player_entity: media_player.sejour
    - conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_maison
        state: armed_away
      sequence:
      - service: script.notifie_ouvertures
        data: {}
      - if:
        - condition: state
          entity_id: input_boolean.alarme_silencieuse
          state: 'off'
        then:
        - service: script.tts_google_home
          data:
            texte: Alarme activée !
            volume: 80
            media_player_entity: media_player.sejour
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.telegram_changement_capteur
    - conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_maison
        state: disarmed
      - condition: template
        value_template: '{{ (trigger.from_state.state != ''unavailable'') and (trigger.from_state
          is not none) }} '
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.alarme_silencieuse
          state: 'off'
        then:
        - service: script.turn_on
          data:
            variables:
              texte: Alarme désactivée
              volume: 80
              media_player_entity: media_player.sejour
          target:
            entity_id: script.tts_google_home
      - service: siren.turn_off
        target:
          entity_id:
          - siren.pse03_v1_1_0_siren_2
          - siren.pse03_v1_1_0_siren
        data: {}
        enabled: false
      - parallel:
        - if:
          - condition: state
            entity_id: input_boolean.alarme_silencieuse
            state: 'off'
          then:
          - service: siren.turn_on
            data:
              tone: '5'
              duration: '5'
            target:
              entity_id:
              - siren.pse03_v1_1_0_siren_2
              - siren.pse03_v1_1_0_siren
        - service: automation.turn_off
          data:
            stop_actions: true
          target:
            entity_id: automation.telegram_changement_capteur
        - if:
          - condition: template
            value_template: '{{trigger.from_state.state == ''triggered''}}'
          then:
          - service: scene.turn_on
            target:
              entity_id: scene.lumieres_vr
            data: {}
      - service: siren.turn_off
        data: {}
        target:
          entity_id:
          - siren.pse03_v1_1_0_siren_2
          - siren.pse03_v1_1_0_siren
    - conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_maison
        state: pending
      - condition: state
        entity_id: input_boolean.alarme_silencieuse
        state: 'off'
      sequence:
      - service: script.turn_on
        data:
          variables:
            texte: Il reste 20 secondes pour désactiver l'alarme, 17, 16, 15, 14,
              13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
            volume: 80
            media_player_entity: media_player.sejour
        target:
          entity_id: script.tts_google_home
      - service: siren.turn_on
        data:
          tone: '6'
        target:
          entity_id:
          - siren.pse03_v1_1_0_siren_2
          - siren.pse03_v1_1_0_siren
      - delay:
          seconds: 4
      - service: siren.turn_on
        data:
          tone: '6'
        target:
          entity_id:
          - siren.pse03_v1_1_0_siren_2
          - siren.pse03_v1_1_0_siren
      - delay:
          seconds: 3
      - repeat:
          while:
          - condition: state
            entity_id: alarm_control_panel.alarme_maison
            state: pending
          sequence:
          - service: siren.turn_on
            data:
              tone: '6'
            target:
              entity_id:
              - siren.pse03_v1_1_0_siren_2
              - siren.pse03_v1_1_0_siren
          - delay:
              seconds: 1
    - conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_maison
        state: triggered
      sequence:
      - parallel:
        - if:
          - condition: state
            entity_id: input_boolean.alarme_silencieuse
            state: 'off'
          then:
          - service: siren.turn_on
            data:
              tone: '1'
              duration: '600'
            target:
              entity_id:
              - siren.pse03_v1_1_0_siren_2
              - siren.pse03_v1_1_0_siren
        - service: scene.create
          data:
            scene_id: lumieres_vr
            snapshot_entities: '{{ expand(states)|selectattr(''domain'', ''in'', (''light'',
              ''cover''))|selectattr(''state'', ''ne'', ''unavailable'')| map(attribute=''entity_id'')|
              list }}

              '
        - service: notify.maison
          data:
            message: Alarme maison déclenchée !
            title: ALARME !
        - service: notify.mobile_app_galaxy_s20_fe
          data:
            message: Alarme maison déclenchée !
            title: ALARME !
        - service: notify.mobile_app_m2103k19pg
          data:
            message: Alarme maison déclenchée !
            title: ALARME !
        - if:
          - condition: template
            value_template: '{{trigger.from_state.state == ''pending''}}'
          then:
          - service: notify.maison
            data:
              message: Délai désactivation alarme dépassé !
      - repeat:
          while:
          - condition: state
            entity_id: alarm_control_panel.alarme_maison
            state: triggered
          sequence:
          - service: cover.open_cover
            data: {}
            target:
              entity_id: cover.vr_general
          - if:
            - condition: state
              entity_id: input_boolean.alarme_silencieuse
              state: 'off'
            then:
            - service: script.turn_on
              data:
                variables:
                  texte: Alarme déclenchée, appel police en cours !
                  volume: 100
                  media_player_entity: media_player.sejour
              target:
                entity_id: script.tts_google_home
          - service: script.allume_lumieres
            data: {}
        enabled: true
  mode: restart
- id: '1677626292376'
  alias: Notify if door opens
  trigger:
  - platform: state
    entity_id: sensor.changement_capteurs
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != '''' }}'
  action:
  - service: notify.moi
    data:
      message: '{{ state_attr(trigger.to_state.state, ''friendly_name'') }} {{ states(trigger.to_state.state)
        }}'
- id: '1677878113159'
  alias: Telegram changement capteur
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.baie_cuisine_fermee_droite
    - binary_sensor.baie_cuisine_verrouillee_droite
    - binary_sensor.baie_cuisine_fermee_gauche
    - binary_sensor.baie_cuisine_verrouillee_gauche
    - binary_sensor.baie_salon_fermee_droite
    - binary_sensor.baie_salon_fermee_gauche
    - binary_sensor.baie_salon_verrouillee_droite
    - binary_sensor.baie_salon_verrouillee_gauche
    - binary_sensor.fenetre_chambre_1_fermee_droite
    - binary_sensor.fenetre_chambre_1_verrouillee_droite
    - binary_sensor.fenetre_chambre_1_fermee_gauche
    - binary_sensor.fenetre_chambre_1_verrouillee_gauche
    - binary_sensor.fenetre_sdj_fermee_droite
    - binary_sensor.fenetre_sdj_verrouillee_droite
    - binary_sensor.fenetre_sdj_fermee_gauche
    - binary_sensor.fenetre_bureau_fermee_droite
    - binary_sensor.fenetre_bureau_verrouillee_droite
    - binary_sensor.fenetre_bureau_fermee_gauche
    - binary_sensor.fenetre_bureau_verrouillee_gauche
    - binary_sensor.fenetre_cellier_fermee
    - binary_sensor.fenetre_cellier_verrouillee
    - binary_sensor.porte_fenetre_salon_fermee
    - binary_sensor.porte_fenetre_salon_verrouillee
    - binary_sensor.fenetre_sdb_rdc_fermee
    - binary_sensor.fenetre_sdb_rdc_verrouillee
    - binary_sensor.fenetre_wc_rdc_fermee
    - binary_sensor.fenetre_wc_rdc_verrouillee
    - binary_sensor.fenetre_chambre_2_fermee_droite
    - binary_sensor.fenetre_chambre_2_verrouillee_droite
    - binary_sensor.fenetre_chambre_2_fermee_gauche
    - binary_sensor.fenetre_chambre_2_verrouillee_gauche
    - binary_sensor.fenetre_chambre_3_fermee_droite
    - binary_sensor.fenetre_chambre_3_verrouillee_droite
    - binary_sensor.fenetre_chambre_3_verrouillee_gauche
    - binary_sensor.fenetre_sdb_etage_fermee
    - binary_sensor.fenetre_sdb_etage_verrouillee
    - binary_sensor.fenetre_wc_etage_fermee
    - binary_sensor.fenetre_wc_etage_verrouillee
    - binary_sensor.fenetre_palier_fermee_droite
    - binary_sensor.fenetre_palier_verrouillee_droite
    - binary_sensor.fenetre_palier_fermee_gauche
    - binary_sensor.fenetre_palier_verrouillee_gauche
    - binary_sensor.fenetre_escalier_fermee
    - binary_sensor.fenetre_escalier_verrouillee
    - binary_sensor.porte_garage_fermee_gauche
    - binary_sensor.porte_garage_verrouillee_gauche
    - binary_sensor.porte_garage_verrouillee_droite
    - binary_sensor.fenetre_garage_fermee
    - binary_sensor.capteur_presence_bureau
  condition: []
  action:
  - service: notify.maison
    data:
      message: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} {{ trigger.to_state.state
        }}

        '
  mode: single
- id: '1679160880850'
  alias: Alerte lumineuse ouverture
  description: Alerte lumineuse passerelle Xiaomi si une fenêtre ou porte est ouverte
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.portail_garage_ferme
  condition: []
  action:
  - choose:
    - conditions:
      - '{{trigger.from_state.state == ''off''}}'
      - '{{trigger.to_state.state == ''on''}}'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.gateway_light_34ce008bede9
    - conditions:
      - '{{trigger.from_state.state == ''on''}}'
      - '{{trigger.to_state.state == ''off''}}'
      sequence:
      - service: light.turn_on
        data:
          color_name: blue
          brightness_pct: 100
        target:
          entity_id: light.gateway_light_34ce008bede9
  mode: single
- id: '1679261150516'
  alias: Alarme absence
  description: Détection absence sans alarme
  trigger:
  - platform: state
    entity_id:
    - person.thomas
    - person.jacinta
    to: not_home
    from: home
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: person.thomas
    state: not_home
  - condition: state
    entity_id: person.jacinta
    state: not_home
  - condition: state
    entity_id: alarm_control_panel.alarme_maison
    state: disarmed
  action:
  - service: notify.maison
    data:
      message: Plus personne n'est à la maison et l'alarme est désactivée, voulez-vous
        l'activer ?
      title: '*Attention*'
  mode: single
- id: '1679444333816'
  alias: Telegram callback
  description: Gère les commandes callback Telegram
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /alarme
    id: alarme
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /activer_alarme
    id: activer_alarme
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /desactiver_alarme
    id: desactiver_alarme
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /osef
    id: osef
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /delete
    id: delete
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /0
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /1
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /2
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /3
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /4
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /5
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /6
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /7
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /8
    id: code
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /9
    id: code
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alarme
      sequence:
      - if:
        - condition: state
          entity_id: alarm_control_panel.alarme_maison
          state: disarmed
        then:
        - service: telegram_bot.send_message
          data:
            title: '*Alarme*'
            target: '{{ trigger.event.data.user_id }}'
            message: L'alarme est désactivée. Voulez-vous l'activer ?
            inline_keyboard:
            - Oui:/activer_alarme, Non:/delete
        else:
        - service: telegram_bot.send_message
          data:
            title: '*Alarme*'
            target: '{{ trigger.event.data.user_id }}'
            message: L'alarme est activée. Voulez-vous la désactiver ?
            inline_keyboard:
            - Oui:/desactiver_alarme, Non:/delete
    - conditions:
      - condition: trigger
        id: activer_alarme
      sequence:
      - service: esphome.alarme_arm_home
        data:
          code: '7757'
      - service: telegram_bot.answer_callback_query
        data:
          callback_query_id: '{{ trigger.event.data.id }}'
          message: "\U0001F6A8 Alarme activée ! \U0001F6A8"
      - service: telegram_bot.edit_message
        data:
          message_id: last
          chat_id: '{{ trigger.event.data.user_id }}'
          title: '*Confirmation*'
          message: L'alarme a été activée par {{ trigger.event.data.from_first }}
    - conditions:
      - condition: trigger
        id: delete
      sequence:
      - service: telegram_bot.delete_message
        data:
          message_id: last
          chat_id: '{{ trigger.event.data.user_id }}'
    - conditions:
      - condition: trigger
        id: osef
      sequence:
      - service: telegram_bot.edit_message
        data:
          message_id: last
          chat_id: '{{ trigger.event.data.user_id }}'
          title: '*Confirmation*'
          message: L'alarme reste désactivée bien que personne ne soit présent
    - conditions:
      - condition: trigger
        id: desactiver_alarme
      sequence:
      - service: telegram_bot.edit_message
        data:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.chat_id }}'
          title: '*Désactivation alarme*'
          inline_keyboard:
          - 1:/1, 2:/2, 3:/3
          - 4:/4, 5:/5, 6:/6
          - 7:/7, 8:/8, 9:/9
          - 0:/0
          message: '{{ trigger.event.data.from_first }} entrez le code :

            '
      - service: input_text.set_value
        data:
          value: ''
        target:
          entity_id: input_text.code
    - conditions:
      - condition: trigger
        id: code
      sequence:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.code
          value: '{{ states(''input_text.code'') }}{{ trigger.event.data.data|replace(''/'',
            '''') }}'
      - service: telegram_bot.edit_message
        data:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.chat_id }}'
          title: '*Désactivation alarme*'
          inline_keyboard:
          - 1:/1, 2:/2, 3:/3
          - 4:/4, 5:/5, 6:/6
          - 7:/7, 8:/8, 9:/9
          - 0:/0
          message: '{{ trigger.event.data.from_first }} entrez le code : {% for s
            in states(''input_text.code'')  -%}\*{%- endfor %}

            '
      - if:
        - condition: template
          value_template: '{{ states(''input_text.code'') | count == 4}}'
        then:
        - if:
          - condition: state
            entity_id: input_text.code
            state: '7757'
          then:
          - service: esphome.alarme_disarm
            data:
              code: '7757'
          - service: telegram_bot.answer_callback_query
            data:
              callback_query_id: '{{ trigger.event.data.id }}'
              message: "\U0001F6A8 Alarme désactivée ! \U0001F6A8"
          - service: telegram_bot.edit_message
            data:
              message_id: '{{ trigger.event.data.message.message_id }}'
              chat_id: '{{ trigger.event.data.chat_id }}'
              title: '*Désactivation alarme*'
              inline_keyboard: []
              message: 'Alarme désactivée par {{ trigger.event.data.from_first }}

                '
          else:
          - service: telegram_bot.answer_callback_query
            data:
              callback_query_id: '{{ trigger.event.data.id }}'
              message: "\U0001F6A8 Code erroné ! \U0001F6A8"
          - service: telegram_bot.edit_message
            data:
              message_id: '{{ trigger.event.data.message.message_id }}'
              chat_id: '{{ trigger.event.data.chat_id }}'
              title: '*Désactivation alarme*'
              inline_keyboard:
              - 1:/1, 2:/2, 3:/3
              - 4:/4, 5:/5, 6:/6
              - 7:/7, 8:/8, 9:/9
              - 0:/0
              message: '{{ trigger.event.data.from_first }} entrez le code :

                '
          - service: input_text.set_value
            data:
              value: ''
            target:
              entity_id: input_text.code
  mode: single
- id: '1680559792912'
  alias: Heartbit timeout GSM
  description: Détecte que le GSM ne répond plus
  trigger:
  - platform: template
    value_template: '{{ now() - states.number.sim800l_heartbit.last_updated  > timedelta(seconds=60)
      }}'
  condition: []
  action:
  - service: persistent_notification.create
    data:
      message: Heartbit Sim800l
    enabled: false
  - service: notify.moi
    data:
      message: Perte de communication avec le SIM800L
  - service: esphome.alarme_send_sms
    data:
      recipient: 0627278083
      message: Perte de com avec le SIM800L
    enabled: false
  mode: single
- id: '1681156778266'
  alias: Ouverture portail garage
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bp_entree_porte_haut_droite
    - binary_sensor.bp_garage_portail
    - binary_sensor.bp_garage_cellier_gauche
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_maison
    state: disarmed
  action:
  - service: button.press
    data: {}
    target:
      entity_id: button.portail_garage
  mode: single
- id: '1682548031354'
  alias: Push Camera
  description: Active les notifications push des caméras
  trigger:
  - platform: state
    entity_id:
    - alarm_control_panel.alarme_maison
    to: armed_away
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: activation
  - platform: state
    entity_id:
    - alarm_control_panel.alarme_maison
    to: disarmed
    id: desactivation
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: desactivation
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.nvr_push_notifications
    - conditions:
      - condition: trigger
        id: activation
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.nvr_push_notifications
  mode: single
- id: '1682548945845'
  alias: Lumière entrée jardin
  description: Allume la lumière extérieure devant la maison quand la caméra détecte
    une personne ou un véhicule
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.entree_vehicle
    to: 'on'
    id: vehicule
  - platform: state
    entity_id:
    - binary_sensor.entree_person
    to: 'on'
    id: personne
  condition:
  - condition: sun
    before: sunrise
    after: sunset
    after_offset: 00:30:00
    before_offset: 00:30:00
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.exterieur_spot_portail_garage
  - if:
    - condition: trigger
      id: personne
    then:
    - service: light.turn_on
      data: {}
      target:
        entity_id: light.exterieur_applique_porche_entree
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.exterieur_spot_portail_garage
      - light.exterieur_applique_porche_entree
  mode: restart
- id: '1683928118795'
  alias: Détection caméra
  description: Notification Telegram lors d'une détection personne ou véhicule des
    caméras
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.jardin_person
    - binary_sensor.jardin_vehicle
    - binary_sensor.entree_person
    - binary_sensor.entree_vehicle
    - binary_sensor.garage_person
    - binary_sensor.garage_vehicle
    - binary_sensor.salon_person
    - binary_sensor.salon_vehicle
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_maison
        state: armed_away
        for:
          hours: 0
          minutes: 3
          seconds: 0
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ ''jardin'' in trigger.entity_id }}'
      - condition: state
        entity_id: binary_sensor.baie_cuisine_verrouillee_droite
        state: 'on'
      - condition: state
        entity_id: binary_sensor.baie_cuisine_verrouillee_gauche
        state: 'on'
      - condition: state
        entity_id: binary_sensor.baie_salon_verrouillee_droite
        state: 'on'
      - condition: state
        entity_id: binary_sensor.baie_salon_verrouillee_gauche
        state: 'on'
      - condition: state
        entity_id: binary_sensor.porte_garage_verrouillee_gauche
        state: 'on'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ ''entree'' in trigger.entity_id }}'
      - condition: template
        value_template: "{%- if states.binary_sensor.porte_entree_fermee.last_changed
          -%}\n  {{ now() - states.binary_sensor.porte_entree_fermee.last_changed
          > timedelta(minutes=3) }}\n{%- else -%}\n  true\n{%- endif -%}\n"
      - condition: template
        value_template: "{%- if states.binary_sensor.portail_garage_ferme.last_changed
          -%}\n  {{ now() - states.binary_sensor.portail_garage_ferme.last_changed
          > timedelta(minutes=3) }}\n{%- else -%}\n  true\n{%- endif -%}\n"
      - condition: and
        conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: person.thomas
            state: home
            for:
              hours: 0
              minutes: 2
              seconds: 0
          - condition: state
            entity_id: person.thomas
            state: not_home
        - condition: or
          conditions:
          - condition: state
            entity_id: person.jacinta
            state: home
            for:
              hours: 0
              minutes: 2
              seconds: 0
          - condition: state
            entity_id: person.jacinta
            state: not_home
  action:
  - service: notify.maison
    data:
      title: Détection caméra
      message: '{{ state_attr(trigger.entity_id, ''friendly_name'') }}'
    enabled: false
  - service: camera.snapshot
    data:
      filename: /config/camera/{{ trigger.entity_id }}.jpg
    target:
      entity_id: "{% if 'salon' in trigger.entity_id  %}\n  camera.salon_sub\n{% elif
        'entree' in trigger.entity_id %}\n  camera.entree_sub\n{% elif 'garage' in
        trigger.entity_id %}\n  camera.garage_sub\n{% elif 'jardin' in trigger.entity_id
        %}\n  camera.jardin_sub\n{% endif %}\n"
  - service: notify.maison
    data:
      title: Detection caméra
      message: 'Un mouvement a été détecté par la caméra :'
      data:
        photo:
        - file: /config/camera/{{ trigger.entity_id }}.jpg
          caption: 'Détection caméra : {{ state_attr(trigger.entity_id, ''friendly_name'')
            }}'
  mode: single
- id: '1686436079869'
  alias: Ouverture volets
  description: Ouverture volets été matin
  trigger:
  - platform: time
    at: 06:00:00
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_maison
    state: disarmed
  - condition: state
    entity_id: weather.maison
    state:
    - clear-night
    - cloudy
    - partlycloudy
    - sunny
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.baie_cuisine_fermee_droite
        state: 'off'
      - condition: state
        entity_id: binary_sensor.baie_cuisine_fermee_gauche
        state: 'off'
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.vr_cuisine
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.baie_salon_fermee_droite
        state: 'off'
      - condition: state
        entity_id: binary_sensor.baie_salon_fermee_gauche
        state: 'off'
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.vr_salon
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.fenetre_sdj_fermee_droite
        state: 'off'
      - condition: state
        entity_id: binary_sensor.fenetre_sdj_fermee_gauche
        state: 'off'
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.vr_salle_de_jeu
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.fenetre_palier_fermee_droite
        state: 'off'
      - condition: state
        entity_id: binary_sensor.fenetre_palier_fermee_gauche
        state: 'off'
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.vr_palier
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.fenetre_chambre_3_fermee_droite
        state: 'off'
      - condition: state
        entity_id: binary_sensor.fenetre_chambre_3_fermee_gauche
        state: 'off'
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.vr_chambre_3
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.fenetre_chambre_2_fermee_droite
        state: 'off'
      - condition: state
        entity_id: binary_sensor.fenetre_chambre_2_fermee_gauche
        state: 'off'
    then:
    - service: cover.open_cover
      target:
        entity_id: cover.vr_chambre_2
      data: {}
    enabled: true
  - if:
    - condition: state
      entity_id: binary_sensor.fenetre_cellier_fermee
      state: 'off'
    then:
    - service: cover.open_cover
      target:
        entity_id: cover.vr_cellier
      data: {}
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.vr_cellier
  - if:
    - condition: state
      entity_id: binary_sensor.porte_fenetre_salon_fermee
      state: 'off'
    then:
    - service: cover.open_cover
      target:
        entity_id: cover.vr_porte_fenetre_salon
      data: {}
  - if:
    - condition: state
      entity_id: binary_sensor.fenetre_escalier_fermee
      state: 'off'
    then:
    - service: cover.open_cover
      target:
        entity_id: cover.vr_escalier
      data: {}
  mode: single
- id: '1686512140329'
  alias: Fin Lave-vaisselle
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.test_template
    to: Fin
  condition: []
  action:
  - service: notify.maison
    data:
      message: Fin de cycle
      title: Lave-vaisselle
  mode: single
- id: '1690121475147'
  alias: Commande volets déportée
  description: Ouvre et ferme les volets sur des BP déportés
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bp_chambre_1_lit_droite_droite
    - binary_sensor.bp_chambre_1_droite
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    id: descente
  - platform: state
    entity_id:
    - binary_sensor.bp_chambre_1_lit_droite_gauche
    - binary_sensor.bp_chambre_1_gauche
    for:
      hours: 0
      minutes: 0
      seconds: 1
    id: montee
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: descente
      sequence:
      - if:
        - condition: state
          entity_id: cover.vr_chambre_1
          state: closing
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.vr_chambre_1
        else:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.vr_chambre_1
    - conditions:
      - condition: trigger
        id: montee
      sequence:
      - if:
        - condition: state
          entity_id: cover.vr_chambre_1
          state: opening
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.vr_chambre_1
        else:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.vr_chambre_1
  mode: single
- id: '1690141783683'
  alias: Persienne VR
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bp_salon_angle_entree_bas_droite
    - binary_sensor.bp_salon_angle_entree_bas_gauche
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition: []
  action:
  - parallel:
    - service: script.persienne
      data:
        cover: cover.vr_salon
        pourcentage: 7
    - service: script.persienne
      data:
        cover: cover.vr_cuisine
        pourcentage: 7
    - service: script.persienne
      data:
        cover: cover.vr_porte_fenetre_salon
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_cellier
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_bureau
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_salle_de_jeu
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_chambre_1
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_chambre_2
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_chambre_3
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_palier
        pourcentage: 11
    - service: script.persienne
      data:
        cover: cover.vr_escalier
        pourcentage: 11
  mode: single
- id: '1696441833102'
  alias: 'Terrasse '
  description: 'Allume la terrasse et remonte le store le soir '
  trigger:
  - platform: sun
    event: sunset
    offset: 00:15:00
    id: plus15min
  - platform: sun
    event: sunset
    offset: -01:00:00
    id: moins1h
  - platform: state
    entity_id:
    - cover.vr_cuisine
    - cover.vr_salon
    to: closed
    id: fermeture
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: plus15min
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.baie_cuisine_verrouillee_droite
            state: 'off'
          - condition: state
            entity_id: binary_sensor.baie_cuisine_verrouillee_gauche
            state: 'off'
        then:
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.exterieur_appliques_terrasse
    - conditions:
      - condition: trigger
        id: moins1h
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.store_banne
    - conditions:
      - condition: state
        entity_id: cover.vr_cuisine
        state: closed
      - condition: state
        entity_id: cover.vr_salon
        state: closed
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.exterieur_appliques_terrasse
  mode: single
- id: '1696441887415'
  description: ''
  trigger: []
  condition: []
  action: []
  mode: single
- id: '1696801508640'
  alias: NSPanel Configuration
  description: ''
  use_blueprint:
    path: Blackymas/nspanel_blueprint.yaml
    input:
      nspanel_name: dc9e9a042844f5973b4fd6b751a4c611
      language: fr
      date_format: '%A, %d/%m'
      weather_entity: weather.maison
      outdoortemp: sensor.lumi_lumi_weather_temperature_6
      home_value01: sensor.puissance_apparente
      home_value01_icon: mdi:flash
      chip01: light.cuisine_led
      chip01_icon: mdi:led-strip-variant
      chip02: light.cuisine_spots_plan_de_travail
      chip02_icon: mdi:wall-sconce-round
      home_custom_button01_icon: mdi:lightbulb
      home_custom_button02: cover.store_banne
      home_custom_button02_icon: mdi:storefront-outline
      home_custom_button03: cover.eau_potable
      home_custom_button03_icon: mdi:pipe-valve
      alarm: alarm_control_panel.alarme_maison
      left_button_entity: light.cuisine_spots_plan_de_travail
      left_button_name: Cuisine spots
      left_button_hold_select: Default
      right_button_entity: light.cuisine_led
      right_button_name: Cuisine LED
      button_page01_label: Volets roulants RDC
      button_page02_label: Volets roulants Etage
      button_page03_label: Page 3
      button_page04_label: Page 4
      entitypages_enabled: true
      entity_page01_label: Fenêtres
      entities_entity01: binary_sensor.baie_cuisine_fermee_droite
      entities_entity01_name: Baie Cuisine droite
      entities_entity01_icon: mdi:window-open-variant
      entities_entity02: binary_sensor.baie_cuisine_fermee_gauche
      entities_entity02_name: Baie Cuisine gauche
      entities_entity02_icon: mdi:window-open-variant
      chip03: binary_sensor.portail_garage_ferme
      chip03_icon: mdi:garage-variant
      entity02: cover.vr_porte_fenetre_salon
      entity02_name: Porte-fenetre
      entity02_icon: mdi:window-shutter
      entity03: cover.vr_salon
      entity03_name: Baie salon
      entity03_icon: mdi:window-shutter
      entity04: cover.vr_cuisine
      entity04_name: Cuisine
      entity04_icon: mdi:window-shutter
      entity05: cover.vr_cellier
      entity05_name: Cellier
      entity05_icon: mdi:window-shutter
      entity06: cover.vr_bureau
      entity06_name: Bureau
      entity06_icon: mdi:window-shutter
      entity07_name: Chambre parents
      entity07: cover.vr_chambre_1
      entity07_icon: mdi:window-shutter
      entity08: cover.vr_bureau
      entity08_name: Bureau
      entity08_icon: mdi:window-shutter
      entity01: cover.vr_general
      entity01_name: General
      entity01_icon: mdi:window-shutter
      entity01_icon_color:
      - 35
      - 223
      - 26
      entity09: cover.vr_palier
      entity09_name: Palier
      entity09_icon: mdi:window-shutter
      entity10: cover.vr_escalier
      entity10_name: Escalier
      entity10_icon: mdi:window-shutter
      entity11: cover.vr_chambre_2
      entity11_name: Chambre Athenais
      entity11_icon: mdi:window-shutter
      entity12: cover.vr_chambre_3
      entity12_name: Chambre 3
      entity12_icon: mdi:window-shutter
      home_custom_button01: light.exterieur_spot_portail_garage
- id: '1696801521588'
  alias: NSPanel Configuration
  description: ''
  use_blueprint:
    path: Blackymas/nspanel_blueprint.yaml
    input:
      nspanel_name: dc9e9a042844f5973b4fd6b751a4c611
      language: fr
      date_format: '%A, %d/%m'
      weather_entity: weather.maison
      outdoortemp: sensor.lumi_lumi_weather_temperature_6
      home_value01: sensor.puissance_apparente
      home_value01_icon: mdi:flash
      chip01_icon: mdi:garage-variant
      chip02_icon: mdi:door-closed-lock
      home_custom_button01: cover.store_banne
      home_custom_button01_icon: mdi:awning-outline
      home_custom_button02_icon: mdi:window-shutter
      home_custom_button03: cover.eau_potable
      home_custom_button03_icon: mdi:pipe-valve
      alarm: alarm_control_panel.alarme_maison
      left_button_entity: light.cuisine_spots_plan_de_travail
      left_button_name: Cuisine spots
      left_button_hold_select: Default
      right_button_entity: light.cuisine_led
      right_button_name: Cuisine LED
      button_page01_label: Volets roulants
      entity01: cover.vr_porte_fenetre_salon
      entity01_name: VR Porte-fenêtre
      entity01_icon: mdi:window-shutter
      button_page02_label: Page 2
      button_page03_label: Page 3
      button_page04_label: Page 4
      entitypages_enabled: true
      entity_page01_label: Fenêtres
      entities_entity01: binary_sensor.baie_cuisine_fermee_droite
      entities_entity01_name: Baie Cuisine droite
      entities_entity01_icon: mdi:window-open-variant
      entities_entity02: binary_sensor.baie_cuisine_fermee_gauche
      entities_entity02_name: Baie Cuisine gauche
      entities_entity02_icon: mdi:window-open-variant
      home_value02: sensor.compteur_eau
      home_value02_icon: mdi:water
      home_custom_button02: cover.vr_cuisine
      chip01: binary_sensor.portail_garage_ferme
      chip01_icon_color:
      - 1
      - 52
      - 254
      chip02: binary_sensor.porte_entree_verrouillee
