
# Loads default set of integrations. Do not remove.
default_config:

logger:
  default: error
  logs:
    rflink: debug
    homeassistant.components.rflink: debug

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 192.168.0.10 #Adresse IP du reverse proxy
  ip_ban_enabled: true
  login_attempts_threshold: 3

# Text to speech
tts:
  - platform: google_translate
    language: "fr" 

# Example configuration.yaml entry
rflink:
  port: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

light:
  - platform: rflink
    automatic_add: true
sensor:
  - platform: rflink
    automatic_add: true
   
device_tracker:    
  - platform: bluetooth_le_tracker
    consider_home: 300
    interval_seconds: 60
    new_device_defaults:
      track_new_devices: true

# Example configuration.yaml entry for the Telegram Bot
telegram_bot:
  - platform: polling
    api_key: !secret telegram_bot_api_key
    allowed_chat_ids:
      - !secret telegram_moi_chat_id
      - !secret telegram_maison_chat_id

# Example configuration.yaml entry for the notifier
notify:
  - platform: telegram
    name: moi
    chat_id: !secret telegram_moi_chat_id
  - platform: telegram
    name: maison
    chat_id: !secret telegram_maison_chat_id

# secrets inside templates not allowed
# must use hard coded 'code' on home assistant panel
# esphome code does not need to match HA code
alarm_control_panel:
  - platform: template
    panels:
      alarme_maison:
        value_template: "{{ states('sensor.state_alarm_panel') }}"
        arm_away:
          - service: esphome.alarme_arm_home
            data:
              code: "{{ code }}"
        disarm:
          - service: esphome.alarme_disarm
            data:
              code: "{{ code }}"

template:                                                                                                                                                                        
  - trigger:                                                                                                                                                                     
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 0
          minutes: 0
          seconds: 30
        above: 8  
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 0
          minutes: 0
          seconds: 30
        above: 1500
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 0
          minutes: 0
          seconds: 30
        below: 1500
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 1
          minutes: 0
          seconds: 30
        below: 1500           
      - platform: homeassistant
        event: start
      - platform: event
        event_type: event_template_reloaded        
    sensor:                                                                                                                                                                      
      - name: test_template                                                                                                                                                            
        state: >-    
          {% if this.state == 'Libre' or this.state == 'Fin' %}
            {% if trigger.idx == '0' %}
            Prélavage
            {%- else -%}                                                                                                                                                           
            Libre 
            {%- endif -%} 
          {%- elif this.state == 'Prélavage' -%}
            {% if trigger.idx == '1' %}
            Lavage
            {%- else -%}                                                                                                                                                           
            Prélavage 
            {%- endif -%}
          {%- elif this.state == 'Lavage' -%}
            {% if trigger.idx == '2' %}
            Rinçage
            {%- else -%}                                                                                                                                                           
            Lavage 
            {%- endif -%}
          {%- elif this.state == 'Rinçage' -%}
            {% if trigger.idx == '1' %}
            Séchage
            {%- else -%}                                                                                                                                                           
            Rinçage 
            {%- endif -%}
          {%- elif this.state == 'Séchage' -%}
            {% if trigger.idx == '3' %}
            Fin
            {%- else -%}                                                                                                                                                           
            Séchage 
            {%- endif -%}
          {%- elif this.state == 'Fin' -%}
          Fin
          {%- else -%}
          Libre
          {%- endif -%}


automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
