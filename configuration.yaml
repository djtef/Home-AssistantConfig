
# Loads default set of integrations. Do not remove.
default_config:

homeassistant:
  external_url: "https://home-assistant.djtef.synology.me"
  internal_url: "http://192.168.0.31:8123"

logger:
  default: error
  logs:
    rflink: debug
    homeassistant.components.rflink: debug

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 192.168.0.10 #Adresse IP du reverse proxy
  ip_ban_enabled: true
  login_attempts_threshold: 3

# Text to speech
tts:
  - platform: google_translate
    language: "fr" 

# Example configuration.yaml entry
rflink:
  port: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

light:
  - platform: rflink
    automatic_add: true
sensor:
  - platform: rflink
    automatic_add: true
   
device_tracker:    
  - platform: bluetooth_le_tracker
    consider_home: 300
    interval_seconds: 60
    new_device_defaults:
      track_new_devices: true

# Example configuration.yaml entry for the Telegram Bot
telegram_bot:
  - platform: polling
    api_key: !secret telegram_bot_api_key
    allowed_chat_ids:
      - !secret telegram_moi_chat_id
      - !secret telegram_maison_chat_id

# Example configuration.yaml entry for the notifier
notify:
  - platform: telegram
    name: moi
    chat_id: !secret telegram_moi_chat_id
  - platform: telegram
    name: maison
    chat_id: !secret telegram_maison_chat_id

# yeelight:
  # custom_effects:
    # - name: 'Call'
      # flow_params:
        # count: 0
        # transitions:
          # - RGBTransition: [90, 255, 36, 50, 20]
          # - RGBTransition: [90, 255, 36, 50, 100]
          # - RGBTransition: [90, 255, 36, 50, 20]
          # - RGBTransition: [90, 255, 36, 50, 100]
          # - SleepTransition:       [500]
proximity:
  home:
    # ignored_zones:
      # - work
      # - school
    devices:
      - device_tracker.galaxy_s20_fe
      - device_tracker.m2103k19pg
    tolerance: 50
    unit_of_measurement: km
         
# secrets inside templates not allowed
# must use hard coded 'code' on home assistant panel
# esphome code does not need to match HA code
alarm_control_panel:
  - platform: template
    panels:
      alarme_maison:
        value_template: "{{ states('sensor.state_alarm_panel') }}"
        arm_away:
          - if:
              - condition: template
                value_template: !secret test_code_silence
            then:
              - service: notify.moi
                data:
                  message: "Alarme en mode silence"
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.alarme_silencieuse
            else:
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.alarme_silencieuse
          - service: esphome.alarme_arm_home
            data:
              code: "{{ code }}"
        disarm:
          - service: esphome.alarme_disarm
            data:
              code: "{{ code }}"

template:                                                                                                                                                                        
  - trigger:                                                                                                                                                                     
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 0
          minutes: 0
          seconds: 30
        above: 8  
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 0
          minutes: 0
          seconds: 30
        above: 1500
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 0
          minutes: 0
          seconds: 30
        below: 1500
      - platform: numeric_state
        entity_id: sensor.prise_lave_vaisselle_active_power
        for:
          hours: 1
          minutes: 0
          seconds: 30
        below: 1500           
      - platform: homeassistant
        event: start
      - platform: event
        event_type: event_template_reloaded        
    sensor:                                                                                                                                                                      
      - name: test_template                                                                                                                                                            
        state: >-    
          {% if this.state == 'Libre' or this.state == 'Fin' %}
            {% if trigger.idx == '0' %}
            Prélavage
            {%- else -%}                                                                                                                                                           
            Libre 
            {%- endif -%} 
          {%- elif this.state == 'Prélavage' -%}
            {% if trigger.idx == '1' %}
            Lavage
            {%- else -%}                                                                                                                                                           
            Prélavage 
            {%- endif -%}
          {%- elif this.state == 'Lavage' -%}
            {% if trigger.idx == '2' %}
            Rinçage
            {%- else -%}                                                                                                                                                           
            Lavage 
            {%- endif -%}
          {%- elif this.state == 'Rinçage' -%}
            {% if trigger.idx == '1' %}
            Séchage
            {%- else -%}                                                                                                                                                           
            Rinçage 
            {%- endif -%}
          {%- elif this.state == 'Séchage' -%}
            {% if trigger.idx == '3' %}
            Fin
            {%- else -%}                                                                                                                                                           
            Séchage 
            {%- endif -%}
          {%- elif this.state == 'Fin' -%}
          Fin
          {%- else -%}
          Libre
          {%- endif -%}

  - sensor:
      - name: Changement capteurs
        state: >
          {% set x = expand(integration_entities("alarme"))|selectattr('domain', 'eq', 'binary_sensor') | sort(attribute='last_changed', reverse=true) | list %}
          {{ (x[0].entity_id if now() - x[0].last_changed < timedelta(seconds=3) else '') if x | count > 0 else '' }}

binary_sensor:
  - platform: group
    name: "Capteurs ouvertures"
    device_class: opening
    entities:
      - binary_sensor.porte_entree_fermee
      - binary_sensor.porte_entree_verrouillee
      - binary_sensor.baie_cuisine_fermee_droite
      - binary_sensor.baie_cuisine_verrouillee_droite
      - binary_sensor.baie_cuisine_fermee_gauche
      - binary_sensor.baie_cuisine_verrouillee_gauche
      - binary_sensor.baie_salon_fermee_droite
      - binary_sensor.baie_salon_fermee_gauche
      - binary_sensor.baie_salon_verrouillee_droite
      - binary_sensor.baie_salon_verrouillee_gauche
      - binary_sensor.fenetre_chambre_1_fermee_droite
      - binary_sensor.fenetre_chambre_1_verrouillee_droite
      - binary_sensor.fenetre_chambre_1_fermee_gauche
      - binary_sensor.fenetre_chambre_1_verrouillee_gauche
      - binary_sensor.fenetre_sdj_fermee_droite
      - binary_sensor.fenetre_sdj_verrouillee_droite
      - binary_sensor.fenetre_sdj_fermee_gauche
      - binary_sensor.fenetre_bureau_fermee_droite
      - binary_sensor.fenetre_bureau_verrouillee_droite
      - binary_sensor.fenetre_bureau_fermee_gauche
      - binary_sensor.fenetre_bureau_verrouillee_gauche
      - binary_sensor.fenetre_cellier_fermee
      - binary_sensor.fenetre_cellier_verrouillee
      - binary_sensor.porte_fenetre_salon_fermee
      - binary_sensor.porte_fenetre_salon_verrouillee
      - binary_sensor.fenetre_sdb_rdc_fermee
      - binary_sensor.fenetre_sdb_rdc_verrouillee
      - binary_sensor.fenetre_wc_rdc_fermee
      - binary_sensor.fenetre_wc_rdc_verrouillee
      - binary_sensor.fenetre_chambre_2_fermee_droite
      - binary_sensor.fenetre_chambre_2_verrouillee_droite
      - binary_sensor.fenetre_chambre_2_fermee_gauche
      - binary_sensor.fenetre_chambre_2_verrouillee_gauche
      - binary_sensor.fenetre_chambre_3_fermee_droite
      - binary_sensor.fenetre_chambre_3_verrouillee_droite
      - binary_sensor.fenetre_chambre_3_verrouillee_gauche
      - binary_sensor.fenetre_sdb_etage_fermee
      - binary_sensor.fenetre_sdb_etage_verrouillee
      - binary_sensor.fenetre_wc_etage_fermee
      - binary_sensor.fenetre_wc_etage_verrouillee
      - binary_sensor.fenetre_palier_fermee_droite
      - binary_sensor.fenetre_palier_verrouillee_droite
      - binary_sensor.fenetre_palier_fermee_gauche
      - binary_sensor.fenetre_palier_verrouillee_gauche
      - binary_sensor.fenetre_escalier_fermee
      - binary_sensor.fenetre_escalier_verrouillee
      - binary_sensor.porte_garage_fermee_gauche
      - binary_sensor.porte_garage_verrouillee_gauche
      - binary_sensor.porte_garage_verrouillee_droite
      - binary_sensor.fenetre_garage_fermee
  
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
