substitutions:
  RTTTL_MARIO: >-
        "mario:d=4,o=5,b=100:16e6,16e6,32p,8e6,16c6,8e6,8g6,8p,8g,8p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,16p,8c6,16p,8g,16p,8e,16p,
        8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,
        16c7,16p,16c7,16c7,p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16d#6,8p,16d6,8p,16c6"
  RTTTL_MISSION: >-
        "MissionImp:d=16,o=6,b=95:32d,32d#,32d,32d#,32d,32d#,32d,32d#,32d,32d,32d#,32e,32f,32f#,32g,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,p,g,8p,g,8p,a#,p,c7,p,g,8p,g,8p,f,p,f#,
        p,a#,g,2d,32p,a#,g,2c#,32p,a#,g,2c,a#5,8c,2p,32p,a#5,g5,2f#,32p,a#5,g5,2f,32p,a#5,g5,2e,d#,8d"
  RTTTL_WARNING: >-
        "warning:d=4,o=6,b=150:1a,2b,2b,4c,4c,4c,4c,8d,8d,8d,8d,8d,8d,8d,8d,16e,16e,16e,16e,16e,16e,16e,16e,16e,16e,16e,16e,16e,16e,16e,16e,32f,32f,32f,32f,32f,32f,32f,32f,32f,
        32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f,32f"
  RTTTL_HIGH: >-
        "Ring High:d=2,o=6,b=10,b=100:b5,d,b5,d,b5,d,b5,d,d,f,d,f,d,f,d,f,f,a,f,a,f,a,f,a."
  RTTTL_TONES: >-
        "Tones:d=8,o=5,b=500,b=500:b,16p,b,2p,g,16p,g,2p,d6,16p,d6,2p,d,16p,d."
  RTTTL_FAIL: >-   
        "siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e"
  RTTTL_SUCCESS: >-         
        "success:d=32,o=5,b=100:c,c#,d#,e,f#,g#,a#,b"
  RTTTL_SIREN: >-      
        "siren:d=16,o=5,b=100:d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,
        e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,
        e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,
        e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d,e,d"
  RTTTL_TUBULAR: >-
        "Tubular Bells:d=4,o=5,b=250,b=250:c6,f6,c6,g6,c6,d#6,f6,c6,g#6,c6,a#6,c6,g6,g#6,c6,g6,c6,f6,c6,g6,c6,d#6,f6,c6,g#6,c6,a#6,c6,g6,g#6,c6,g6,c6,f6,c6,g6,c6,d#6,f6,c6,g#6,
        c6,a#6,c6,g6,g#6,c6,g6,c6,f6,c6,g6,c6,d#6,f6,c6,g#6,c6,a#6,c6,g6,g#6"
  RTTL_HALLOWEN: >-
        "Halloween:d=8,o=5,b=180,b=180:d6,g,g,d6,g,g,d6,g,d#6,g,d6,g,g,d6,g,g,d6,g,d#6,g,c#6,f#,f#,c#6,f#,f#,c#6,f#,d6,f#,c#6,f#,f#,c#6,f#,f#,c#6,f#,d6,f#"
  alarm_code: !secret alarm_code
  alarm_code_silence: !secret alarm_code_silence
  delai_armement: '3'
  DISARMED: "0"
  PENDING: "1"
  TRIGGERED: "2"
  ARMING: "3"
  ARMED_AWAY: "4"
  UNAVAILABLE: "5"
  TIMEOUT: "6"
  REPONDEUR: !secret num_repondeur
  NUM_TEL:   !secret num_tel
  NUM_THOMAS: !secret num_thomas
  NUM_JACE:   !secret num_jace

  # restore state
  # if trigger sequence reset to armed for now.
  #   should it retrigger sequence?
esphome:
  on_boot:
    then:
      - lambda: |-
          if (id(state_int) == ${DISARMED}) {
            id(state_alarm_panel).publish_state("disarmed");
          } else if (id(state_int) == ${PENDING}){
            id(state_alarm_panel).publish_state("triggered");
          } else if (id(state_int) == ${TRIGGERED}){
            id(state_alarm_panel).publish_state("triggered");
          } else if (id(state_int) == ${ARMING}){
            id(state_alarm_panel).publish_state("armed_away");
          } else if (id(state_int) == ${ARMED_AWAY}){
            id(state_alarm_panel).publish_state("armed_away");
          } else{
            id(state_alarm_panel).publish_state("disarmed");
          }
      - if:
          condition:
              - lambda: |-
                    return id(state_int) == ${TRIGGERED};
          then:
            - script.execute: trigger_alarm_execute
      - if:
          condition:
              - lambda: |-
                    return id(state_int) == ${DISARMED};
          then:
            - switch.turn_off: CAMERAS
          else:
            - switch.turn_on: CAMERAS
      - binary_sensor.template.publish:
          id: SILENT_ALARM
          state: OFF
      - number.set:
          id: sim800l_heartbit
          value: -1

# Enable Home Assistant API
api:
  services:
    - service: play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'          
    - service: arm_home
      variables:
         code: string
      then:
        - if:
            condition:
              lambda: "return code == \"${alarm_code}\";"
            then:
              - script.execute:
                  id: alarm_arm
                  silencieux: off
        - if:
            condition:
              lambda: "return code == \"${alarm_code_silence}\";"
            then:
              - script.execute:
                  id: alarm_arm
                  silencieux: on
    - service: disarm
      variables:
         code: string
      then:
        - if:
            condition:
              lambda: "return code == \"${alarm_code}\";"
            then:
              - script.execute: alarm_disarm
    - service: send_sms
      variables:
        recipient: string
        message: string
      then:
        - sim800l.send_sms:
            recipient: !lambda 'return recipient;'
            message: !lambda 'return message;'
    - service: dial
      variables:
        recipient: string
      then:
        - sim800l.dial:
            recipient: !lambda 'return recipient;'
    - service: connect
      then:
        - sim800l.connect
    - service: disconnect
      then:
        - sim800l.disconnect
    - service: send_ussd
      variables:
        ussdCode: string
      then:
        - sim800l.send_ussd:
            ussd: !lambda 'return ussdCode;'

script:
  - id: attente_armement
    mode: restart 
    then:
      - if:
          condition:
            or:
               - binary_sensor.is_off: CE_F_FERME
               - binary_sensor.is_off: CE_F_VERR
               - binary_sensor.is_off: CU_B_FERME_D
               - binary_sensor.is_off: CU_B_FERME_G
               - binary_sensor.is_off: CU_B_VERR_D
               - binary_sensor.is_off: CU_B_VERR_G
               - binary_sensor.is_off: SA_B_FERME_D
               - binary_sensor.is_off: SA_B_FERME_G
               - binary_sensor.is_off: SA_B_VERR_D
               - binary_sensor.is_off: SA_B_VERR_G
               - binary_sensor.is_off: SA_PF_FERME
               - binary_sensor.is_off: SA_PF_VERR
               - binary_sensor.is_off: SJ_F_FERME_D
               - binary_sensor.is_off: SJ_F_FERME_G
               - binary_sensor.is_off: SJ_F_VERR_D
               # - binary_sensor.is_off: SJ_F_VERR_G
               - binary_sensor.is_off: BB_F_FERME
               - binary_sensor.is_off: BB_F_VERR
               - binary_sensor.is_off: C1_F_FERME_D
               - binary_sensor.is_off: C1_F_FERME_G
               - binary_sensor.is_off: C1_F_VERR_D
               - binary_sensor.is_off: C1_F_VERR_G
               - binary_sensor.is_off: EN_P_FERME
               - binary_sensor.is_off: EN_P_VERR
               - binary_sensor.is_off: WB_F_FERME
               - binary_sensor.is_off: WB_F_VERR
               - binary_sensor.is_off: BU_F_FERME_D
               - binary_sensor.is_off: BU_F_FERME_G
               - binary_sensor.is_off: BU_F_VERR_D
               - binary_sensor.is_off: BU_F_VERR_G
               - binary_sensor.is_off: PA_F_ESC_FERME
               - binary_sensor.is_off: PA_F_ESC_VERR
               - binary_sensor.is_off: PA_F_FERME_D
               - binary_sensor.is_off: PA_F_FERME_G
               - binary_sensor.is_off: PA_F_VERR_D
               - binary_sensor.is_off: PA_F_VERR_G
               - binary_sensor.is_off: BH_F_FERME
               - binary_sensor.is_off: BH_F_VERR
               - binary_sensor.is_off: WH_F_FERME
               - binary_sensor.is_off: WH_F_VERR
               - binary_sensor.is_off: C2_F_FERME_D
               - binary_sensor.is_off: C2_F_FERME_G
               - binary_sensor.is_off: C2_F_VERR_D
               - binary_sensor.is_off: C2_F_VERR_G
               - binary_sensor.is_off: C3_F_FERME_D
               # - binary_sensor.is_off: C3_F_FERME_G
               - binary_sensor.is_off: C3_F_VERR_D
               - binary_sensor.is_off: C3_F_VERR_G
               - binary_sensor.is_off: GA_F_FERME
               - binary_sensor.is_off: GA_P_FERME_G
               - binary_sensor.is_off: GA_P_VERR_D
               - binary_sensor.is_off: GA_P_VERR_G
          then:
            - rtttl.play: ${RTTTL_TUBULAR}
          else: 
            - rtttl.play: ${RTTTL_MARIO}
      - wait_until:
         condition:
           not:
             - rtttl.is_playing
         timeout: ${delai_armement}min
      - rtttl.play: ${RTTTL_HIGH}
      - wait_until:
         condition:
           not:
             - rtttl.is_playing
         timeout: ${delai_armement}min
  - id: attente_desarmement
    mode: restart 
    then:
      - rtttl.play: ${RTTTL_MISSION}
      - wait_until:
         condition:
           not:
             - rtttl.is_playing
      - while:
         condition:
           - lambda: |-
               return id(state_int) == ${PENDING};
         then:
           - if:
               condition:
                 not:
                   - rtttl.is_playing
               then:
                  - rtttl.play: ${RTTTL_WARNING}
                  - logger.log: "Play WARNING"
           - delay: 1s
           - logger.log: "While"
      # - wait_until:
         # condition:
           # - lambda: |-
               # return id(state_int) == ${PENDING};
  - id: commande_clavier
    then:
      - switch.turn_off: SA_SIRENE
      - switch.turn_off: GA_SIRENE
      - if:
          condition:
            or:
              - lambda: |-
                  return id(state_int) == ${DISARMED};
              - lambda: |-
                  return id(state_int) == ${TIMEOUT};
          then:
            - script.execute: alarm_arm_delayed
          else:
            - script.execute: alarm_disarm
  - id: ouverture_VR
    parameters:
      piece: string  
      sensor_VR : bool
    then:
      - if:
          condition:
            api.connected:
          then:
            - if:
                condition:
                  - lambda: |-
                      return sensor_VR == false;
                then:
                  # - logger.log: !lambda |-
                       # char buf[256];
                       # sprintf(buf,  "Vendalisme VR %s", piece);
                       # return ((std::string) buf).c_str();
                  - lambda: |-
                        ESP_LOGD("main", "Vendalisme VR %s", piece.c_str());
                  # - script.execute: trigger_alarm
                else:
                  - lambda: |-
                        ESP_LOGD("main", "Ouverture VR %s", piece.c_str());
          else:
            - if:
                condition:
                  and:
                    - not:
                        script.is_running: trigger_alarm_execute
                    - or:
                        - lambda: |-
                              return id(state_int) == ${ARMED_AWAY};
                        - lambda: |-
                              return id(state_int) == ${PENDING};   
                then:
                  - lambda: |-
                        ESP_LOGD("main", "Attention ! Ouverture VR %s avec Home Assistant non connecté !!", piece.c_str());
  - id: trigger_alarm_delayed
    mode: single 
    parameters:
      delay_ms: int
    then:
      - logger.log: "Init déclenchement temporisé..."
      - if:
          condition:
            and:
              - not:
                  script.is_running: trigger_alarm_execute
              - lambda: |-
                  return id(state_int) == ${ARMED_AWAY};
          then:
            - lambda: |-
               id(state_alarm_panel).publish_state("pending");
            - script.execute: attente_desarmement
            - delay: !lambda return delay_ms;
            - script.execute: trigger_alarm_execute
  # when arming and disarming, turn off all sirens and buzzers
  # also, cancel any trigger sequence
  - id: alarm_arm
    parameters:
      silencieux: bool
    then:
        - if:
            condition:
               - lambda: |-
                   return silencieux == true;
            then:
              - binary_sensor.template.publish:
                  id: SILENT_ALARM
                  state: ON
            else:
              - binary_sensor.template.publish:
                  id: SILENT_ALARM
                  state: OFF
        - logger.log: "Armé !"
        - script.stop: attente_armement
        - rtttl.stop
        - rtttl.play: ${RTTTL_TONES}
        - switch.turn_on: CAMERAS
        - lambda: |-
            id(state_alarm_panel).publish_state("armed_away");
  - id: alarm_arm_delayed
    then:
        - lambda: |-
              id(state_alarm_panel).publish_state("arming");
        - logger.log: "Armement..."
        - script.execute: attente_armement
        - wait_until:
            condition:
              or:
                - binary_sensor.is_off: EN_P_FERME
                - binary_sensor.is_off: GA_PORTAIL_FERME
                - not: 
                    script.is_running: attente_armement
        - if:
            condition:
              - binary_sensor.is_off: EN_P_FERME
            then:
              - logger.log: "Porte ouverte"
              - wait_until:
                  condition:
                    or:
                      - binary_sensor.is_on: EN_P_FERME
                      - not: 
                          script.is_running: attente_armement
              - logger.log: "Porte fermée ou délai dépassé"
            else:
              - if:
                  condition:
                    - binary_sensor.is_off: GA_PORTAIL_FERME
                  then:
                    - logger.log: "Portail ouvert"
                    - wait_until:
                        condition:
                          or:
                            - binary_sensor.is_on: GA_PORTAIL_FERME
                            - not: 
                                script.is_running: attente_armement
                    - logger.log: "Portail fermé ou délai dépassé"
                  else:
                    - logger.log: "Dépassement délai ! "
        - if:
            condition:
              - script.is_running: attente_armement
            then:
              - script.execute:
                  id: alarm_arm
                  silencieux: off
            else:
              - logger.log: "Timeout armement!"  
              - rtttl.stop 
              - rtttl.play: ${RTTTL_FAIL}
              - lambda: |-
                    id(state_alarm_panel).publish_state("timeout");            
  - id: alarm_disarm
    then:
        - logger.log: "Désarmement..."
        - switch.turn_off: SA_SIRENE
        - switch.turn_off: GA_SIRENE
        - switch.turn_off: XT_SIRENE
        - switch.turn_off: XT_LED
        - switch.turn_off: XT_STO
        - script.stop: alarm_arm_delayed
        - script.stop: attente_armement
        - script.stop: trigger_alarm
        - script.stop: attente_desarmement
        - script.stop: trigger_alarm_delayed
        - script.stop: trigger_alarm_execute
        - switch.turn_off: CAMERAS
        - lambda: |-
              id(state_alarm_panel).publish_state("disarmed");
        - rtttl.play: ${RTTTL_SUCCESS}
        - binary_sensor.template.publish:
            id: SILENT_ALARM
            state: OFF
  # triggering sequence
  - id: trigger_alarm_execute
    then:
        - logger.log: "Déclenchement..."
        - lambda: |-
            id(state_alarm_panel).publish_state("triggered");
        - rtttl.play: ${RTTTL_SIREN}
        - if:
            condition:
              - binary_sensor.is_off: SILENT_ALARM
            then:
              - logger.log: "Active sirènes"
              - switch.turn_on: SA_SIRENE
              - switch.turn_on: GA_SIRENE
              - switch.turn_on: XT_SIRENE
              - switch.turn_on: XT_STO
        - repeat:
            count: 10
            then:
                - script.execute:
                    id: alerte_sms
                    msg: "ALARME MAISON DECLENCHEE !!"
                - delay: 5s
                - script.execute:
                    id: alerte_sms
                    msg: "ALARME MAISON DECLENCHEE !!"
                - delay: 5s
                - script.execute:
                    id: alerte_sms
                    msg: "ALARME MAISON DECLENCHEE !!"
                - delay: 5s
                - script.execute:
                    id: alerte_sms
                    msg: "ALARME MAISON DECLENCHEE !!"
                - delay: 15s
                - sim800l.dial:
                    recipient: ${NUM_THOMAS}
                - script.execute:
                    id: alerte_sms
                    msg: "ALARME MAISON DECLENCHEE !!"
                - delay: 5s
                - sim800l.disconnect
                - sim800l.dial:
                    recipient: ${NUM_JACE}
                - delay: 5s
                - sim800l.disconnect
                - delay: 5s
        - switch.turn_off: SA_SIRENE
        - switch.turn_off: GA_SIRENE
        - switch.turn_off: XT_SIRENE
        - switch.turn_off: XT_STO
  # only execute triggering if armed and not already running
  - id: trigger_alarm
    then:
      - logger.log: "Init déclenchement..."
      - if:
          condition:
            and:
              - not:
                  script.is_running: trigger_alarm_execute
              - or:
                  - lambda: |-
                        return id(state_int) == ${ARMED_AWAY};
                  - lambda: |-
                        return id(state_int) == ${PENDING};
                        
          then:
            - script.execute: trigger_alarm_execute
  - id: heartbit_gsm
    mode: restart
    then:
      - delay: 10s
      - sim800l.dial:
          recipient: ${REPONDEUR}
      - delay: 10s
      - sim800l.disconnect
      - delay: 30s
      - sim800l.send_sms:
          recipient: ${NUM_TEL}
          message: "ping"
  - id: alerte_sms
    parameters:
      msg: string  
    then:
      - sim800l.send_sms:
          recipient: ${NUM_THOMAS}
          message: !lambda return msg;
      - sim800l.send_sms:
          recipient: ${NUM_JACE}
          message: !lambda return msg;
  
 
number:
  - platform: template
    name: "Code"
    min_value: 0
    max_value: 9999
    step: 1
    mode: "box"
    set_action :
      then:
        - if:
            condition:
              lambda: "return x == ${alarm_code};"
            then:
              - if:
                  condition:
                    or:
                      - lambda: |-
                          return id(state_int) == ${DISARMED};
                      - lambda: |-
                          return id(state_int) == ${TIMEOUT};
                  then:
                    - script.execute: alarm_arm_delayed
                  else:
                    - script.execute: alarm_disarm

  - platform: template
    name: "SIM800L Heartbit"
    id: sim800l_heartbit
    min_value: -1
    max_value: 1
    step: 1
    optimistic: true
    
# global for state restore
globals:
   - id: state_int
     type: int
     restore_value: yes
     initial_value: '0'
     
text_sensor:
  - platform: template
    id: sms_sender
    name: "Sms Sender"
  - platform: template
    id: sms_message
    name: "Sms Message"
  - platform: template
    id: caller_id_text_sensor
    name: "Caller ID"
  - platform: template
    id: ussd_message
    name: "Ussd Code"
  - platform: template
    name: "State Alarm Panel"
    id: "state_alarm_panel"
    on_value:
      then:
        - lambda: |-
            if (x == "disarmed")
            {
              id(state_int) = ${DISARMED};
            }
            else if (x == "armed_away")
            {
              id(state_int) = ${ARMED_AWAY};
            }
            else if (x == "arming")
            {
              id(state_int) = ${ARMING};
            }
            else if (x == "triggered")
            {
              id(state_int) = ${TRIGGERED};
            }
            else if (x == "pending")
            {
              id(state_int) = ${PENDING};
            }
            else if (x == "timeout")
            {
              id(state_int) = ${TIMEOUT};
            }
            else
            {
              id(state_int) = ${DISARMED};
            }

uart:
  baud_rate: 9600
  tx_pin: GPIO17
  rx_pin: GPIO5

mcp23017:
  - id: 'mcp23017_hub_b1'
    i2c_id: bus_b
    address: 0x20
  - id: 'mcp23017_hub_b2'
    i2c_id: bus_b
    address: 0x21
  - id: 'mcp23017_hub_b3'
    i2c_id: bus_b
    address: 0x22
  - id: 'mcp23017_hub_b4'
    i2c_id: bus_b
    address: 0x23
  - id: 'mcp23017_hub_b5'
    i2c_id: bus_b
    address: 0x24

sim800l:
  on_sms_received:
    - logger.log:
        format: "Received '%s' from %s"
        args: [ 'message.c_str()', 'sender.c_str()' ]
    - if:
        condition:
          - lambda: |-
              return str_lower_case(message) == "test";
        then:
          - sim800l.send_sms:
              recipient: !lambda 'return sender;'
              message: "OK"
        else:
          - if:
              condition:
                - lambda: |-
                    return str_lower_case(message) == "alarme";
              then:
                - sim800l.send_sms:
                    recipient: !lambda 'return sender;'
                    message: !lambda |-
                       return "RSSI : " + to_string(id(rssi).state) + " dB\n" + "Etat : " + to_string(id(registered).state);
    - lambda: |-
        id(sms_sender).publish_state(sender);
        id(sms_message).publish_state(message);
  on_incoming_call:
    - lambda: |-
        id(caller_id_text_sensor).publish_state(caller_id);
  on_call_connected:
    - logger.log:
        format: Call connected
  on_call_disconnected:
    - logger.log:
        format: Call disconnected
  on_ussd_received:
    - lambda: |-
        id(ussd_message).publish_state(ussd);

# Individual inputs
binary_sensor:
  - platform: sim800l
    registered:
      id: registered
      name: "Sim800L Registered"
  - platform: status
    name: "Alarme Status"
  - platform: template
    name: "Alarme silencieuse"
    id: SILENT_ALARM
  # - platform: gpio #GPIO35
    # name: "GPIO35"
    # id: gpio35
    # pin: 35
  # - platform: gpio #GPIO36
    # name: "Autoprotection capteur présence Bureau"
    # id: BU_AP_PIR
    # pin: 36
  # - platform: gpio #GPIO39
    # name: "Alarme clavier Entrée"
    # id: EN_ALARM_CLAVIER
    # pin: 39
  - platform: gpio #in01
    name: "Porte Entrée verrouillée"
    id: EN_P_VERR
    # device_class: lock
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 8
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - logger.log: "Porte déverrouillée"
        - if:
            condition:
              - binary_sensor.is_off: EN_P_FERME
            then:
              - logger.log: "Déclenchement tempo déverrouillage"
              - script.execute: 
                  id: trigger_alarm_delayed
                  delay_ms: 20000
  - platform: gpio #in02
    name: "Porte Entrée fermée"
    id: EN_P_FERME
    # device_class: door
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 9
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - logger.log: "Porte ouverte"
        - if:
            condition:
              - binary_sensor.is_off: EN_P_VERR
            then:
              - logger.log: "Déclenchement tempo ouverture"
              - script.execute: 
                  id: trigger_alarm_delayed
                  delay_ms: 20000
  - platform: gpio #in03
    name: "Porte Garage verrouillée Droite"
    id: GA_P_VERR_D
    # device_class: lock
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 10
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: GA_P_FERME_G
            then:
              - logger.log: "Porte Garage déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in04
    name: "Porte Garage verrouillée Gauche"
    id: GA_P_VERR_G
    # device_class: lock
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 11
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: GA_P_FERME_G
            then:
              - logger.log: "Porte Garage déverrouillée Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in05
    name: "Porte Garage fermée Gauche"
    id: GA_P_FERME_G
    # device_class: door
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 12
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: GA_P_VERR_G
            then:
              - logger.log: "Porte Garage ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in06
    name: "Fenêtre Garage fermée"
    id: GA_F_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 13
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - logger.log: "Fenêtre Garage ouverte"
        - script.execute: trigger_alarm
  - platform: gpio #in07
    name: "Portail Garage fermé"
    id: GA_PORTAIL_FERME
    # device_class: garage_door
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 14
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      - logger.log: "Déclenchement tempo ouverture garage"
      - script.execute: 
          id: trigger_alarm_delayed
          delay_ms: 180000
  - platform: gpio #in08
    name: "Fenêtre Palier verrouillée Gauche"
    id: PA_F_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 15
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: PA_F_FERME_G
            then:
              - logger.log: "Fenêtre Palier déverrouillée Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in09
    name: "VR Palier fermés"
    id: PA_VR_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 7
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Pallier", id(PA_VR_MONTE).state);
  - platform: gpio #in10
    name: "Fenêtre Palier fermée Gauche"
    id: PA_F_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 6
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: PA_F_VERR_G
            then:
              - logger.log: "Fenêtre Palier ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in11
    name: "Fenêtre Palier verrouillée Droite"
    id: PA_F_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 5
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: PA_F_FERME_D
            then:
              - logger.log: "Fenêtre Palier déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in12
    name: "Fenêtre Palier fermée Droite"
    id: PA_F_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 4
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: PA_F_VERR_D
            then:
              - logger.log: "Fenêtre Palier ouverte Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in13
    name: "Fenêtre Bureau verrouillée Gauche"
    id: BU_F_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 3
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BU_F_FERME_G
            then:
              - logger.log: "Fenêtre Bureau déverrouillée Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in14
    name: "VR Bureau fermés"
    id: BU_VR_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 2
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Bureau", id(BU_VR_MONTE).state);
  - platform: gpio #in15
    name: "Fenêtre Bureau fermée Gauche"
    id: BU_F_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 1
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BU_F_VERR_G
            then:
              - logger.log: "Fenêtre Bureau ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in16
    name: "Fenêtre Bureau verrouillée Droite"
    id: BU_F_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b1
      number: 0
      mode: INPUT_PULLUP
      inverted: True    
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BU_F_FERME_D
            then:
              - logger.log: "Fenêtre Bureau déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in17
    name: "Fenêtre Bureau fermée Droite"
    id: BU_F_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 8
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BU_F_VERR_D
            then:
              - logger.log: "Fenêtre Bureau ouverte Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in18
    name: "VR Porte-fenêtre Salon fermés"
    id: SA_VR_PF_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 9
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Porte fenetre", id(SA_PF_VR_MONTE).state);
  - platform: gpio #in19
    name: "Porte-fenêtre Salon verrouillée"
    id: SA_PF_VERR
    # device_class: lock
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 10
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: SA_PF_FERME
            then:
              - logger.log: "Porte-fenêtre Salon ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in20
    name: "Porte-fenêtre Salon fermée"
    id: SA_PF_FERME
    # device_class: door
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 11
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: SA_PF_VERR
            then:
              - logger.log: "Porte-fenêtre Salon ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in21
    name: "Fenêtre Chambre 1 verrouillée Gauche"
    id: C1_F_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 12
      mode: INPUT_PULLUP
      inverted: True
    on_release :
        # TODO : Réparer capteur fermeture gauche
      # then:
        # - if:
            # condition:
              # - binary_sensor.is_off: C1_F_FERME_G
      then:
        - logger.log: "Fenêtre Chambre 1 déverrouillée Gauche"
        - script.execute: trigger_alarm
  - platform: gpio #in22
    name: "VR Chambre 1 fermés"
    id: C1_VR_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 13
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Chambre 1", id(C1_VR_MONTE).state);
  - platform: gpio #in23
    name: "Fenêtre Chambre 1 fermée Gauche"
    id: C1_F_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 14
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C1_F_VERR_G
            then:
              - logger.log: "Fenêtre Chambre 1 ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in24
    name: "Fenêtre Chambre 1 verrouillée Droite"
    id: C1_F_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 15
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C1_F_FERME_D
            then:
              - logger.log: "Fenêtre Chambre 1 déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in25
    name: "Fenêtre Chambre 1 fermée Droite"
    id: C1_F_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 7
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C1_F_VERR_D
            then:
              - logger.log: "Fenêtre Chambre 1 ouverte Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in26
    name: "Baie Salon verrouillée Gauche"
    id: SA_B_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 6
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: SA_B_FERME_G
            then:
              - logger.log: "Baie Salon ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in27
    name: "VR Baie Salon fermés Gauche"
    id: SA_VR_B_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 5
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Baie Salon gauche", id(SA_B_VR_MONTE).state);
  - platform: gpio #in28
    name: "Baie Salon Fermée Gauche"
    id: SA_B_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 4
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: SA_B_VERR_G
            then:
              - logger.log: "Baie Salon Ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in29
    name: "Baie Salon verrouillée Droite"
    id: SA_B_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 3
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: SA_B_FERME_D
            then:
              - logger.log: "Baie Salon déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in30
    name: "VR Baie Salon fermés Droite"
    id: SA_VR_B_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 2
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Baie Salon droite", id(SA_B_VR_MONTE).state);
  - platform: gpio #in31
    name: "Baie Salon fermée Droite"
    id: SA_B_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 1
      mode: INPUT_PULLUP
      inverted: True
    on_release :
    # TODO : Réparer capteur baie salon verrouillée droite
      # then:
        # - if:
            # condition:
              # - binary_sensor.is_off: SA_B_VERR_D
      then:
        - logger.log: "Baie Salon ouverte Droite"
        - script.execute: trigger_alarm
  - platform: gpio #in32
    name: "Fenêtre SDB RDC fermée"
    id: BB_F_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b3
      number: 0
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BB_F_VERR
            then:
              - logger.log: "Fenêtre SDB RDC ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in33
    name: "Fenêtre SDB RDC verrouillée"
    id: BB_F_VERR
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 8
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BB_F_FERME
            then:
              - logger.log: "Fenêtre SDB RDC déverrouillée"
              - script.execute: trigger_alarm
  - platform: gpio #in34
    name: "Baie Cuisine verrouillée Gauche"
    id: CU_B_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 9
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: CU_B_FERME_G
            then:
              - logger.log: "Baie Cuisine déverrouillée Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in35
    name: "VR Cuisine fermés Gauche"
    id: CU_VR_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 10
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Baie cuisine gauche", id(CU_VR_MONTE).state);
  - platform: gpio #in36
    name: "Baie Cuisine fermée Gauche"
    id: CU_B_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 11
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: CU_B_VERR_G
            then:
              - logger.log: "Baie Cuisine ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in37
    name: "Baie Cuisine verrouillée Droite"
    id: CU_B_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 12
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: CU_B_FERME_D
            then:
              - logger.log: "Baie Cuisine déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in38
    name: "VR Cuisine fermés Droite"
    id: CU_VR_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 13
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Baie cuisine droite", id(CU_VR_MONTE).state);
  - platform: gpio #in39
    name: "Baie Cuisine fermée Droite"
    id: CU_B_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 14
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: CU_B_VERR_D
            then:
              - logger.log: "Baie Cuisine ouverte Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in40
    name: "Fenêtre SDJ verrouillée Gauche"
    id: SJ_F_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 15
      mode: INPUT_PULLUP
      inverted: True
    # TODO : Réparer capteur SJ_F_VERR_G
    # on_release :
      # then:
        # - if:
            # condition:
              # - binary_sensor.is_off: SJ_F_FERME_G
            # then:
              # - logger.log: "Fenêtre SDJ déverrouillée Gauche"
              # - script.execute: trigger_alarm
  #--------------BAS-------------------    
  - platform: gpio #in41
    name: "VR SDJ fermés"
    id: SJ_VR_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 8
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("SDJ", id(SJ_VR_MONTE).state);
  - platform: gpio #in42
    name: "Fenêtre SDJ fermée Gauche"
    id: SJ_F_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 9
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      #TODO : Réparer capteur SJ_F_VERR_G
      # then:
        # - if:
            # condition:
              # - binary_sensor.is_off: SJ_F_VERR_G
            # then:
        - logger.log: "Fenêtre SDJ ouverte Gauche"
        - script.execute: trigger_alarm
  - platform: gpio #in43
    name: "Fenêtre SDJ verrouillée Droite"
    id: SJ_F_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 10
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: SJ_F_FERME_D
            then:
              - logger.log: "Fenêtre SDJ déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in44
    name: "Fenêtre SDJ fermée Droite"
    id: SJ_F_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 11
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: SJ_F_VERR_D
            then:
              - logger.log: "Fenêtre SDJ ouverte Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in45
    name: "Fenêtre Chambre 3 verrouillée Gauche"
    id: C3_F_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 12
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C3_F_FERME_G
            then:
              - logger.log: "Fenêtre Chambre 3 déverrouillée Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in46
    name: "Fenêtre Chambre 3 fermée Gauche"
    id: C3_F_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 13
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C3_F_VERR_G
            then:
              - logger.log: "Fenêtre Chambre 3 ouverte Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in47
    name: "Fenêtre Chambre 3 verrouillée Droite"
    id: C3_F_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 14
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C3_F_FERME_D
            then:
              - logger.log: "Fenêtre Chambre 3 déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in48
    name: "VR Chambre 3 fermés"
    id: C3_VR_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 15
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Chambre 3", id(C3_VR_MONTE).state);
  - platform: gpio #in49
    name: "Fenêtre Chambre 3 fermée Droite"
    id: C3_F_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 7
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C3_F_VERR_D
            then:
              - logger.log: "Fenêtre Chambre 3 ouverte Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in50
    name: "Fenêtre Chambre 2 verrouillée Gauche"
    id: C2_F_VERR_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 6
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C2_F_FERME_G
            then:
              - logger.log: "Fenêtre Chambre 2 déverrouillée Gauche"
              - script.execute: trigger_alarm
  - platform: gpio #in51
    name: "Fenêtre Chambre 2 fermée Gauche"
    id: C2_F_FERME_G
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 5
      mode: INPUT_PULLUP
      inverted: True
    on_release :
        # TODO : Réparer capteur verrouillage chambre 2 gauche
      # then:
        # - if:
            # condition:
              # - binary_sensor.is_off: C2_F_VERR_G
      then:
        - logger.log: "Fenêtre Chambre 2 ouverte Gauche"
        - script.execute: trigger_alarm
  - platform: gpio #in52
    name: "Fenêtre Chambre 2 verrouillée Droite"
    id: C2_F_VERR_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 4
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C2_F_FERME_D
            then:
              - logger.log: "Fenêtre Chambre 2 déverrouillée Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in53
    name: "VR Chambre 2 fermés"
    id: C2_VR_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 3
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Chambre 2", id(C2_VR_MONTE).state);
  - platform: gpio #in54
    name: "Fenêtre Chambre 2 fermée Droite"
    id: C2_F_FERME_D
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 2
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: C2_F_VERR_D
            then:
              - logger.log: "Fenêtre Chambre 2 ouverte Droite"
              - script.execute: trigger_alarm
  - platform: gpio #in55
    name: "Fenêtre WC Etage fermée"
    id: WH_F_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 1
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: WH_F_VERR
            then:
              - logger.log: "Fenêtre WC Etage ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in56
    name: "Fenêtre WC Etage verrouillée"
    id: WH_F_VERR
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b2
      number: 0
      mode: INPUT_PULLUP
      inverted: True      
  - platform: gpio #in57
    name: "VR Escalier fermés"
    id: PA_VR_ESC_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 8
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Escalier", id(PA_ESC_VR_MONTE).state);
  - platform: gpio #in58
    name: "Fenêtre Escalier fermée"
    id: PA_F_ESC_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 9
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: PA_F_ESC_VERR
            then:
              - logger.log: "Fenêtre Escalier ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in59
    name: "Fenêtre Escalier verrouillée"
    id: PA_F_ESC_VERR
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 10
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: PA_F_ESC_FERME
            then:
              - logger.log: "Fenêtre Escalier déverrouillée"
              - script.execute: trigger_alarm
  - platform: gpio #in60
    name: "Fenêtre WC RDC fermée"
    id: WB_F_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 11
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: WB_F_VERR
            then:
              - logger.log: "Fenêtre WC RDC ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in61
    name: "Fenêtre WC RDC verrouillée"
    id: WB_F_VERR
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 12
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: WB_F_FERME
            then:
              - logger.log: "Fenêtre WC RDC déverrouillée"
              - script.execute: trigger_alarm
  - platform: gpio #in62
    name: "Fenêtre SDB Etage fermée"
    id: BH_F_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 13
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BH_F_VERR
            then:
              - logger.log: "Fenêtre SDB Etage ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in63
    name: "Fenêtre SDB Etage verrouillée"
    id: BH_F_VERR
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 14
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: BH_F_FERME
            then:
              - logger.log: "Fenêtre SDB Etage déverrouillée"
              - script.execute: trigger_alarm
  - platform: gpio #in64
    name: "VR Cellier fermés"
    id: CE_VR_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 15
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - lambda: id(ouverture_VR)->execute("Cellier", id(CE_VR_MONTE).state);
  - platform: gpio #in65
    name: "Fenêtre Cellier verrouillée"
    id: CE_F_VERR
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 7
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: CE_F_FERME
            then:
              - logger.log: "Fenêtre Cellier déverrouillée"
              - script.execute: trigger_alarm
  - platform: gpio #in66
    name: "Fenêtre Cellier fermée"
    id: CE_F_FERME
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 6
      mode: INPUT_PULLUP
      inverted: True
    on_release :
      then:
        - if:
            condition:
              - binary_sensor.is_off: CE_F_VERR
            then:
              - logger.log: "Fenêtre Cellier ouverte"
              - script.execute: trigger_alarm
  - platform: gpio #in67
    name: "Autoprotection sirène intérieure"
    id: AP_SIR_INT
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 5
      mode: INPUT_PULLUP
      inverted: True
    # on_release :
      # then:
        # - logger.log: "Autoprotection sirène intérieure coupée"
        # - script.execute: trigger_alarm
  - platform: gpio #in68
    name: "Activation clavier entrée"
    id: EN_ACT_CLAVIER
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 4
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      then:
        - script.execute: commande_clavier
  - platform: gpio #in69
    name: "Capteur présence bureau"
    id: BU_PIR
    filters:
      - delayed_on: 1s
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 3
      mode: INPUT_PULLUP
      inverted: False
    on_press :
      then:
        - logger.log: "Détection mouvement Bureau"
        - script.execute: trigger_alarm
  - platform: gpio #in70
    name: "Autoprotection sirène extérieure"
    id: AP_SIR_XT
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 2
      mode: INPUT_PULLUP
      inverted: True
    # on_release :
      # then:
        # - if:
            # condition:
              # - binary_sensor.is_off: <GARDE_FOU>
            # then:
              # - logger.log: "<enter log>"
              # - script.execute: trigger_alarm
  - platform: gpio #in71
    name: "in71"
    id: in71
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 1
      mode: INPUT_PULLUP
      inverted: True
    # on_release :
      # then:
        # - if:
            # condition:
              # - binary_sensor.is_off: <GARDE_FOU>
            # then:
              # - logger.log: "<enter log>"
              # - script.execute: trigger_alarm
  - platform: gpio #in72
    name: "in72"
    id: in72
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    pin:
      mcp23xxx: mcp23017_hub_b4
      number: 0
      mode: INPUT_PULLUP
      inverted: False   

  
  - platform: homeassistant
    name: "VR Bureau montée"
    id: BU_VR_MONTE
    entity_id: switch.vr_bureau_montee
  - platform: homeassistant
    name: "VR Cellier montée"
    id: CE_VR_MONTE    
    entity_id: switch.vr_cellier_montee
  - platform: homeassistant
    name: "VR Chambre 1 montée"
    id: C1_VR_MONTE 
    entity_id: switch.vr_chambre_1_montee
  - platform: homeassistant
    name: "VR Chambre 2 montée"
    id: C2_VR_MONTE 
    entity_id: switch.vr_chambre_2_montee
  - platform: homeassistant
    name: "VR Chambre 3 montée"
    id: C3_VR_MONTE 
    entity_id: switch.vr_chambre_3_montee
  - platform: homeassistant
    name: "VR Cuisine montée"
    id: CU_VR_MONTE 
    entity_id: switch.vr_cuisine_montee
  - platform: homeassistant
    name: "VR Escalier montée"
    id: PA_ESC_VR_MONTE 
    entity_id: switch.vr_escalier_montee
  - platform: homeassistant
    name: "VR Palier montée"
    id: PA_VR_MONTE 
    entity_id: switch.vr_palier_montee
  - platform: homeassistant
    name: "VR Porte fenêtre Salon montée"
    id: SA_PF_VR_MONTE 
    entity_id: switch.vr_porte_fenetre_salon_montee
  - platform: homeassistant
    name: "VR SDJ montée"
    id: SJ_VR_MONTE 
    entity_id: switch.vr_salle_de_jeu_montee
  - platform: homeassistant
    name: "VR Baie Salon montée"
    id: SA_B_VR_MONTE 
    entity_id: switch.vr_salon_montee
    
sensor:
  - platform: sim800l
    rssi:
      id: rssi
      name: "Sim800L RSSI"
      on_value:
        then:
          - lambda: |-
                auto call = id(sim800l_heartbit).make_call();
                call.set_value(id(sim800l_heartbit).state*(-1));
                call.perform();
          - script.execute: heartbit_gsm
          

  # - platform: template
    # name: "Heartbit"
    # id: heartbit
    # update_interval: never
    
  # - platform: template
    # id: sim800l_last_update
    # name: "SIM800L last update"
    # device_class: timestamp
    # entity_category: diagnostic
    # accuracy_decimals: 0
    # update_interval: never
    

# Individual outputs
switch:

  - platform: shutdown
    name: "Alarme Shutdown"
  - platform: gpio
    id: out73
    name: "out73"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 0
      mode: OUTPUT
      inverted: False
  - platform: gpio
    id: out74
    name: "out74"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 1
      mode: OUTPUT
      inverted: False
  - platform: gpio
    id: CAMERAS
    name: "Switch cameras"
    icon: "mdi:cctv"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 2
      mode: OUTPUT
      inverted: False
  - platform: gpio
    id: XT_SIRENE
    name: "Sirène Extérieure"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 3
      mode: OUTPUT
      inverted: False
  - platform: gpio
    id: XT_STO
    name: "Signal Optique Extérieur"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 4
      mode: OUTPUT
      inverted: True
  - platform: gpio
    id: XT_LED
    name: "LED Sirène extérieure"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 5
      mode: OUTPUT
      inverted: True
  - platform: gpio
    id: GA_SIRENE
    name: "Sirène Garage"
    icon: "mdi:bullhorn"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 6
      mode: OUTPUT
      inverted: False
  - platform: gpio
    id: SA_SIRENE
    name: "Sirène salon"
    icon: "mdi:bullhorn"
    pin:
      mcp23xxx: mcp23017_hub_b5
      number: 7
      mode: OUTPUT
      inverted: False
    restore_mode:  ALWAYS_OFF
    
output:
  - platform: ledc
    pin: GPIO12
    id: rtttl_out
    
rtttl:
  output: rtttl_out
  on_finished_playback:
    - logger.log: 'Song ended!'
    